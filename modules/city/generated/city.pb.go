// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: city.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Core city entity
type City struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name            string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Country         string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	CountryCode     string                 `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"` // ISO 3166-1 alpha-2
	StateProvince   string                 `protobuf:"bytes,5,opt,name=state_province,json=stateProvince,proto3" json:"state_province,omitempty"`
	Latitude        float64                `protobuf:"fixed64,6,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude       float64                `protobuf:"fixed64,7,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Timezone        string                 `protobuf:"bytes,8,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Population      int64                  `protobuf:"varint,9,opt,name=population,proto3" json:"population,omitempty"`
	Currency        string                 `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Languages       []string               `protobuf:"bytes,11,rep,name=languages,proto3" json:"languages,omitempty"`
	Description     string                 `protobuf:"bytes,12,opt,name=description,proto3" json:"description,omitempty"`
	Highlights      []string               `protobuf:"bytes,13,rep,name=highlights,proto3" json:"highlights,omitempty"`
	Climate         string                 `protobuf:"bytes,14,opt,name=climate,proto3" json:"climate,omitempty"`
	BestTimeToVisit string                 `protobuf:"bytes,15,opt,name=best_time_to_visit,json=bestTimeToVisit,proto3" json:"best_time_to_visit,omitempty"`
	TopAttractions  []string               `protobuf:"bytes,16,rep,name=top_attractions,json=topAttractions,proto3" json:"top_attractions,omitempty"`
	Metadata        *CityMetadata          `protobuf:"bytes,17,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *City) Reset() {
	*x = City{}
	mi := &file_city_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *City) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*City) ProtoMessage() {}

func (x *City) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use City.ProtoReflect.Descriptor instead.
func (*City) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{0}
}

func (x *City) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *City) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *City) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *City) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *City) GetStateProvince() string {
	if x != nil {
		return x.StateProvince
	}
	return ""
}

func (x *City) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *City) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *City) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *City) GetPopulation() int64 {
	if x != nil {
		return x.Population
	}
	return 0
}

func (x *City) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *City) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *City) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *City) GetHighlights() []string {
	if x != nil {
		return x.Highlights
	}
	return nil
}

func (x *City) GetClimate() string {
	if x != nil {
		return x.Climate
	}
	return ""
}

func (x *City) GetBestTimeToVisit() string {
	if x != nil {
		return x.BestTimeToVisit
	}
	return ""
}

func (x *City) GetTopAttractions() []string {
	if x != nil {
		return x.TopAttractions
	}
	return nil
}

func (x *City) GetMetadata() *CityMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *City) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *City) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// City metadata
type CityMetadata struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ImageUrl             string                 `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ImageGallery         []string               `protobuf:"bytes,2,rep,name=image_gallery,json=imageGallery,proto3" json:"image_gallery,omitempty"`
	OfficialWebsite      string                 `protobuf:"bytes,3,opt,name=official_website,json=officialWebsite,proto3" json:"official_website,omitempty"`
	TourismWebsite       string                 `protobuf:"bytes,4,opt,name=tourism_website,json=tourismWebsite,proto3" json:"tourism_website,omitempty"`
	IsCapital            bool                   `protobuf:"varint,5,opt,name=is_capital,json=isCapital,proto3" json:"is_capital,omitempty"`
	IsPopularDestination bool                   `protobuf:"varint,6,opt,name=is_popular_destination,json=isPopularDestination,proto3" json:"is_popular_destination,omitempty"`
	SafetyRating         string                 `protobuf:"bytes,7,opt,name=safety_rating,json=safetyRating,proto3" json:"safety_rating,omitempty"` // "low", "medium", "high"
	CostOfLivingIndex    float64                `protobuf:"fixed64,8,opt,name=cost_of_living_index,json=costOfLivingIndex,proto3" json:"cost_of_living_index,omitempty"`
	WalkabilityScore     string                 `protobuf:"bytes,9,opt,name=walkability_score,json=walkabilityScore,proto3" json:"walkability_score,omitempty"` // "low", "medium", "high"
	TransportOptions     []string               `protobuf:"bytes,10,rep,name=transport_options,json=transportOptions,proto3" json:"transport_options,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CityMetadata) Reset() {
	*x = CityMetadata{}
	mi := &file_city_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CityMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityMetadata) ProtoMessage() {}

func (x *CityMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityMetadata.ProtoReflect.Descriptor instead.
func (*CityMetadata) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{1}
}

func (x *CityMetadata) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CityMetadata) GetImageGallery() []string {
	if x != nil {
		return x.ImageGallery
	}
	return nil
}

func (x *CityMetadata) GetOfficialWebsite() string {
	if x != nil {
		return x.OfficialWebsite
	}
	return ""
}

func (x *CityMetadata) GetTourismWebsite() string {
	if x != nil {
		return x.TourismWebsite
	}
	return ""
}

func (x *CityMetadata) GetIsCapital() bool {
	if x != nil {
		return x.IsCapital
	}
	return false
}

func (x *CityMetadata) GetIsPopularDestination() bool {
	if x != nil {
		return x.IsPopularDestination
	}
	return false
}

func (x *CityMetadata) GetSafetyRating() string {
	if x != nil {
		return x.SafetyRating
	}
	return ""
}

func (x *CityMetadata) GetCostOfLivingIndex() float64 {
	if x != nil {
		return x.CostOfLivingIndex
	}
	return 0
}

func (x *CityMetadata) GetWalkabilityScore() string {
	if x != nil {
		return x.WalkabilityScore
	}
	return ""
}

func (x *CityMetadata) GetTransportOptions() []string {
	if x != nil {
		return x.TransportOptions
	}
	return nil
}

// City statistics
type CityStatistics struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	CityId           string                 `protobuf:"bytes,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	TotalPois        int32                  `protobuf:"varint,2,opt,name=total_pois,json=totalPois,proto3" json:"total_pois,omitempty"`
	TotalRestaurants int32                  `protobuf:"varint,3,opt,name=total_restaurants,json=totalRestaurants,proto3" json:"total_restaurants,omitempty"`
	TotalHotels      int32                  `protobuf:"varint,4,opt,name=total_hotels,json=totalHotels,proto3" json:"total_hotels,omitempty"`
	TotalAttractions int32                  `protobuf:"varint,5,opt,name=total_attractions,json=totalAttractions,proto3" json:"total_attractions,omitempty"`
	UserVisits       int32                  `protobuf:"varint,6,opt,name=user_visits,json=userVisits,proto3" json:"user_visits,omitempty"`
	SavedItineraries int32                  `protobuf:"varint,7,opt,name=saved_itineraries,json=savedItineraries,proto3" json:"saved_itineraries,omitempty"`
	AverageRating    float64                `protobuf:"fixed64,8,opt,name=average_rating,json=averageRating,proto3" json:"average_rating,omitempty"`
	PoiByCategory    []*CategoryCount       `protobuf:"bytes,9,rep,name=poi_by_category,json=poiByCategory,proto3" json:"poi_by_category,omitempty"`
	LastUpdated      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CityStatistics) Reset() {
	*x = CityStatistics{}
	mi := &file_city_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CityStatistics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CityStatistics) ProtoMessage() {}

func (x *CityStatistics) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CityStatistics.ProtoReflect.Descriptor instead.
func (*CityStatistics) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{2}
}

func (x *CityStatistics) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *CityStatistics) GetTotalPois() int32 {
	if x != nil {
		return x.TotalPois
	}
	return 0
}

func (x *CityStatistics) GetTotalRestaurants() int32 {
	if x != nil {
		return x.TotalRestaurants
	}
	return 0
}

func (x *CityStatistics) GetTotalHotels() int32 {
	if x != nil {
		return x.TotalHotels
	}
	return 0
}

func (x *CityStatistics) GetTotalAttractions() int32 {
	if x != nil {
		return x.TotalAttractions
	}
	return 0
}

func (x *CityStatistics) GetUserVisits() int32 {
	if x != nil {
		return x.UserVisits
	}
	return 0
}

func (x *CityStatistics) GetSavedItineraries() int32 {
	if x != nil {
		return x.SavedItineraries
	}
	return 0
}

func (x *CityStatistics) GetAverageRating() float64 {
	if x != nil {
		return x.AverageRating
	}
	return 0
}

func (x *CityStatistics) GetPoiByCategory() []*CategoryCount {
	if x != nil {
		return x.PoiByCategory
	}
	return nil
}

func (x *CityStatistics) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// POI count by category
type CategoryCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Category      string                 `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CategoryCount) Reset() {
	*x = CategoryCount{}
	mi := &file_city_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CategoryCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryCount) ProtoMessage() {}

func (x *CategoryCount) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryCount.ProtoReflect.Descriptor instead.
func (*CategoryCount) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{3}
}

func (x *CategoryCount) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CategoryCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Weather information for cities
type WeatherInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CityId             string                 `protobuf:"bytes,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	CurrentCondition   string                 `protobuf:"bytes,2,opt,name=current_condition,json=currentCondition,proto3" json:"current_condition,omitempty"`
	TemperatureCelsius int32                  `protobuf:"varint,3,opt,name=temperature_celsius,json=temperatureCelsius,proto3" json:"temperature_celsius,omitempty"`
	Humidity           int32                  `protobuf:"varint,4,opt,name=humidity,proto3" json:"humidity,omitempty"`
	Description        string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ForecastUrl        string                 `protobuf:"bytes,6,opt,name=forecast_url,json=forecastUrl,proto3" json:"forecast_url,omitempty"`
	LastUpdated        *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *WeatherInfo) Reset() {
	*x = WeatherInfo{}
	mi := &file_city_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeatherInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeatherInfo) ProtoMessage() {}

func (x *WeatherInfo) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeatherInfo.ProtoReflect.Descriptor instead.
func (*WeatherInfo) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{4}
}

func (x *WeatherInfo) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *WeatherInfo) GetCurrentCondition() string {
	if x != nil {
		return x.CurrentCondition
	}
	return ""
}

func (x *WeatherInfo) GetTemperatureCelsius() int32 {
	if x != nil {
		return x.TemperatureCelsius
	}
	return 0
}

func (x *WeatherInfo) GetHumidity() int32 {
	if x != nil {
		return x.Humidity
	}
	return 0
}

func (x *WeatherInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WeatherInfo) GetForecastUrl() string {
	if x != nil {
		return x.ForecastUrl
	}
	return ""
}

func (x *WeatherInfo) GetLastUpdated() *timestamppb.Timestamp {
	if x != nil {
		return x.LastUpdated
	}
	return nil
}

// Request/Response messages
type GetCitiesRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Limit             int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset            int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	IncludeStatistics bool                   `protobuf:"varint,3,opt,name=include_statistics,json=includeStatistics,proto3" json:"include_statistics,omitempty"`
	CountryCode       string                 `protobuf:"bytes,4,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`  // Filter by country
	PopularOnly       bool                   `protobuf:"varint,5,opt,name=popular_only,json=popularOnly,proto3" json:"popular_only,omitempty"` // Only popular destinations
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCitiesRequest) Reset() {
	*x = GetCitiesRequest{}
	mi := &file_city_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitiesRequest) ProtoMessage() {}

func (x *GetCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitiesRequest.ProtoReflect.Descriptor instead.
func (*GetCitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{5}
}

func (x *GetCitiesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetCitiesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetCitiesRequest) GetIncludeStatistics() bool {
	if x != nil {
		return x.IncludeStatistics
	}
	return false
}

func (x *GetCitiesRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *GetCitiesRequest) GetPopularOnly() bool {
	if x != nil {
		return x.PopularOnly
	}
	return false
}

type GetCitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cities        []*City                `protobuf:"bytes,1,rep,name=cities,proto3" json:"cities,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCitiesResponse) Reset() {
	*x = GetCitiesResponse{}
	mi := &file_city_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCitiesResponse) ProtoMessage() {}

func (x *GetCitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCitiesResponse.ProtoReflect.Descriptor instead.
func (*GetCitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{6}
}

func (x *GetCitiesResponse) GetCities() []*City {
	if x != nil {
		return x.Cities
	}
	return nil
}

func (x *GetCitiesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type GetCityRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	CityId            string                 `protobuf:"bytes,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	IncludeStatistics bool                   `protobuf:"varint,2,opt,name=include_statistics,json=includeStatistics,proto3" json:"include_statistics,omitempty"`
	IncludeWeather    bool                   `protobuf:"varint,3,opt,name=include_weather,json=includeWeather,proto3" json:"include_weather,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetCityRequest) Reset() {
	*x = GetCityRequest{}
	mi := &file_city_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityRequest) ProtoMessage() {}

func (x *GetCityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityRequest.ProtoReflect.Descriptor instead.
func (*GetCityRequest) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{7}
}

func (x *GetCityRequest) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *GetCityRequest) GetIncludeStatistics() bool {
	if x != nil {
		return x.IncludeStatistics
	}
	return false
}

func (x *GetCityRequest) GetIncludeWeather() bool {
	if x != nil {
		return x.IncludeWeather
	}
	return false
}

type GetCityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	City          *City                  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Statistics    *CityStatistics        `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Weather       *WeatherInfo           `protobuf:"bytes,3,opt,name=weather,proto3" json:"weather,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCityResponse) Reset() {
	*x = GetCityResponse{}
	mi := &file_city_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityResponse) ProtoMessage() {}

func (x *GetCityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityResponse.ProtoReflect.Descriptor instead.
func (*GetCityResponse) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{8}
}

func (x *GetCityResponse) GetCity() *City {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *GetCityResponse) GetStatistics() *CityStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *GetCityResponse) GetWeather() *WeatherInfo {
	if x != nil {
		return x.Weather
	}
	return nil
}

type SearchCitiesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	CountryCode   string                 `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	FuzzySearch   bool                   `protobuf:"varint,5,opt,name=fuzzy_search,json=fuzzySearch,proto3" json:"fuzzy_search,omitempty"` // Enable fuzzy matching
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCitiesRequest) Reset() {
	*x = SearchCitiesRequest{}
	mi := &file_city_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCitiesRequest) ProtoMessage() {}

func (x *SearchCitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCitiesRequest.ProtoReflect.Descriptor instead.
func (*SearchCitiesRequest) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{9}
}

func (x *SearchCitiesRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchCitiesRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *SearchCitiesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchCitiesRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *SearchCitiesRequest) GetFuzzySearch() bool {
	if x != nil {
		return x.FuzzySearch
	}
	return false
}

type SearchCitiesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*CitySearchResult    `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Metadata      *SearchMetadata        `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchCitiesResponse) Reset() {
	*x = SearchCitiesResponse{}
	mi := &file_city_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchCitiesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCitiesResponse) ProtoMessage() {}

func (x *SearchCitiesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCitiesResponse.ProtoReflect.Descriptor instead.
func (*SearchCitiesResponse) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{10}
}

func (x *SearchCitiesResponse) GetResults() []*CitySearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchCitiesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *SearchCitiesResponse) GetMetadata() *SearchMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CitySearchResult struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	City           *City                  `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	RelevanceScore float64                `protobuf:"fixed64,2,opt,name=relevance_score,json=relevanceScore,proto3" json:"relevance_score,omitempty"`
	MatchReason    string                 `protobuf:"bytes,3,opt,name=match_reason,json=matchReason,proto3" json:"match_reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CitySearchResult) Reset() {
	*x = CitySearchResult{}
	mi := &file_city_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CitySearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CitySearchResult) ProtoMessage() {}

func (x *CitySearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CitySearchResult.ProtoReflect.Descriptor instead.
func (*CitySearchResult) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{11}
}

func (x *CitySearchResult) GetCity() *City {
	if x != nil {
		return x.City
	}
	return nil
}

func (x *CitySearchResult) GetRelevanceScore() float64 {
	if x != nil {
		return x.RelevanceScore
	}
	return 0
}

func (x *CitySearchResult) GetMatchReason() string {
	if x != nil {
		return x.MatchReason
	}
	return ""
}

type SearchMetadata struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	QueryTimeMs       float64                `protobuf:"fixed64,1,opt,name=query_time_ms,json=queryTimeMs,proto3" json:"query_time_ms,omitempty"`
	SearchMethod      string                 `protobuf:"bytes,2,opt,name=search_method,json=searchMethod,proto3" json:"search_method,omitempty"`
	FuzzyMatchingUsed bool                   `protobuf:"varint,3,opt,name=fuzzy_matching_used,json=fuzzyMatchingUsed,proto3" json:"fuzzy_matching_used,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *SearchMetadata) Reset() {
	*x = SearchMetadata{}
	mi := &file_city_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMetadata) ProtoMessage() {}

func (x *SearchMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMetadata.ProtoReflect.Descriptor instead.
func (*SearchMetadata) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{12}
}

func (x *SearchMetadata) GetQueryTimeMs() float64 {
	if x != nil {
		return x.QueryTimeMs
	}
	return 0
}

func (x *SearchMetadata) GetSearchMethod() string {
	if x != nil {
		return x.SearchMethod
	}
	return ""
}

func (x *SearchMetadata) GetFuzzyMatchingUsed() bool {
	if x != nil {
		return x.FuzzyMatchingUsed
	}
	return false
}

type GetCityStatisticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CityId        string                 `protobuf:"bytes,1,opt,name=city_id,json=cityId,proto3" json:"city_id,omitempty"`
	IncludeTrends bool                   `protobuf:"varint,2,opt,name=include_trends,json=includeTrends,proto3" json:"include_trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCityStatisticsRequest) Reset() {
	*x = GetCityStatisticsRequest{}
	mi := &file_city_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityStatisticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityStatisticsRequest) ProtoMessage() {}

func (x *GetCityStatisticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityStatisticsRequest.ProtoReflect.Descriptor instead.
func (*GetCityStatisticsRequest) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{13}
}

func (x *GetCityStatisticsRequest) GetCityId() string {
	if x != nil {
		return x.CityId
	}
	return ""
}

func (x *GetCityStatisticsRequest) GetIncludeTrends() bool {
	if x != nil {
		return x.IncludeTrends
	}
	return false
}

type GetCityStatisticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Statistics    *CityStatistics        `protobuf:"bytes,1,opt,name=statistics,proto3" json:"statistics,omitempty"`
	Trends        []*TrendData           `protobuf:"bytes,2,rep,name=trends,proto3" json:"trends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCityStatisticsResponse) Reset() {
	*x = GetCityStatisticsResponse{}
	mi := &file_city_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCityStatisticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCityStatisticsResponse) ProtoMessage() {}

func (x *GetCityStatisticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCityStatisticsResponse.ProtoReflect.Descriptor instead.
func (*GetCityStatisticsResponse) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{14}
}

func (x *GetCityStatisticsResponse) GetStatistics() *CityStatistics {
	if x != nil {
		return x.Statistics
	}
	return nil
}

func (x *GetCityStatisticsResponse) GetTrends() []*TrendData {
	if x != nil {
		return x.Trends
	}
	return nil
}

type TrendData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Metric        string                 `protobuf:"bytes,1,opt,name=metric,proto3" json:"metric,omitempty"` // "visits", "pois_added", "itineraries_created"
	DataPoints    []*DataPoint           `protobuf:"bytes,2,rep,name=data_points,json=dataPoints,proto3" json:"data_points,omitempty"`
	Period        string                 `protobuf:"bytes,3,opt,name=period,proto3" json:"period,omitempty"` // "daily", "weekly", "monthly"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TrendData) Reset() {
	*x = TrendData{}
	mi := &file_city_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TrendData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrendData) ProtoMessage() {}

func (x *TrendData) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrendData.ProtoReflect.Descriptor instead.
func (*TrendData) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{15}
}

func (x *TrendData) GetMetric() string {
	if x != nil {
		return x.Metric
	}
	return ""
}

func (x *TrendData) GetDataPoints() []*DataPoint {
	if x != nil {
		return x.DataPoints
	}
	return nil
}

func (x *TrendData) GetPeriod() string {
	if x != nil {
		return x.Period
	}
	return ""
}

type DataPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         float64                `protobuf:"fixed64,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DataPoint) Reset() {
	*x = DataPoint{}
	mi := &file_city_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataPoint) ProtoMessage() {}

func (x *DataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_city_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataPoint.ProtoReflect.Descriptor instead.
func (*DataPoint) Descriptor() ([]byte, []int) {
	return file_city_proto_rawDescGZIP(), []int{16}
}

func (x *DataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *DataPoint) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_city_proto protoreflect.FileDescriptor

const file_city_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"city.proto\x12\x0eai_poi.city.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa0\x05\n" +
	"\x04City\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acountry\x18\x03 \x01(\tR\acountry\x12!\n" +
	"\fcountry_code\x18\x04 \x01(\tR\vcountryCode\x12%\n" +
	"\x0estate_province\x18\x05 \x01(\tR\rstateProvince\x12\x1a\n" +
	"\blatitude\x18\x06 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\a \x01(\x01R\tlongitude\x12\x1a\n" +
	"\btimezone\x18\b \x01(\tR\btimezone\x12\x1e\n" +
	"\n" +
	"population\x18\t \x01(\x03R\n" +
	"population\x12\x1a\n" +
	"\bcurrency\x18\n" +
	" \x01(\tR\bcurrency\x12\x1c\n" +
	"\tlanguages\x18\v \x03(\tR\tlanguages\x12 \n" +
	"\vdescription\x18\f \x01(\tR\vdescription\x12\x1e\n" +
	"\n" +
	"highlights\x18\r \x03(\tR\n" +
	"highlights\x12\x18\n" +
	"\aclimate\x18\x0e \x01(\tR\aclimate\x12+\n" +
	"\x12best_time_to_visit\x18\x0f \x01(\tR\x0fbestTimeToVisit\x12'\n" +
	"\x0ftop_attractions\x18\x10 \x03(\tR\x0etopAttractions\x128\n" +
	"\bmetadata\x18\x11 \x01(\v2\x1c.ai_poi.city.v1.CityMetadataR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\x12 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x13 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xa9\x03\n" +
	"\fCityMetadata\x12\x1b\n" +
	"\timage_url\x18\x01 \x01(\tR\bimageUrl\x12#\n" +
	"\rimage_gallery\x18\x02 \x03(\tR\fimageGallery\x12)\n" +
	"\x10official_website\x18\x03 \x01(\tR\x0fofficialWebsite\x12'\n" +
	"\x0ftourism_website\x18\x04 \x01(\tR\x0etourismWebsite\x12\x1d\n" +
	"\n" +
	"is_capital\x18\x05 \x01(\bR\tisCapital\x124\n" +
	"\x16is_popular_destination\x18\x06 \x01(\bR\x14isPopularDestination\x12#\n" +
	"\rsafety_rating\x18\a \x01(\tR\fsafetyRating\x12/\n" +
	"\x14cost_of_living_index\x18\b \x01(\x01R\x11costOfLivingIndex\x12+\n" +
	"\x11walkability_score\x18\t \x01(\tR\x10walkabilityScore\x12+\n" +
	"\x11transport_options\x18\n" +
	" \x03(\tR\x10transportOptions\"\xc0\x03\n" +
	"\x0eCityStatistics\x12\x17\n" +
	"\acity_id\x18\x01 \x01(\tR\x06cityId\x12\x1d\n" +
	"\n" +
	"total_pois\x18\x02 \x01(\x05R\ttotalPois\x12+\n" +
	"\x11total_restaurants\x18\x03 \x01(\x05R\x10totalRestaurants\x12!\n" +
	"\ftotal_hotels\x18\x04 \x01(\x05R\vtotalHotels\x12+\n" +
	"\x11total_attractions\x18\x05 \x01(\x05R\x10totalAttractions\x12\x1f\n" +
	"\vuser_visits\x18\x06 \x01(\x05R\n" +
	"userVisits\x12+\n" +
	"\x11saved_itineraries\x18\a \x01(\x05R\x10savedItineraries\x12%\n" +
	"\x0eaverage_rating\x18\b \x01(\x01R\raverageRating\x12E\n" +
	"\x0fpoi_by_category\x18\t \x03(\v2\x1d.ai_poi.city.v1.CategoryCountR\rpoiByCategory\x12=\n" +
	"\flast_updated\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"A\n" +
	"\rCategoryCount\x12\x1a\n" +
	"\bcategory\x18\x01 \x01(\tR\bcategory\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"\xa4\x02\n" +
	"\vWeatherInfo\x12\x17\n" +
	"\acity_id\x18\x01 \x01(\tR\x06cityId\x12+\n" +
	"\x11current_condition\x18\x02 \x01(\tR\x10currentCondition\x12/\n" +
	"\x13temperature_celsius\x18\x03 \x01(\x05R\x12temperatureCelsius\x12\x1a\n" +
	"\bhumidity\x18\x04 \x01(\x05R\bhumidity\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12!\n" +
	"\fforecast_url\x18\x06 \x01(\tR\vforecastUrl\x12=\n" +
	"\flast_updated\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\vlastUpdated\"\xb5\x01\n" +
	"\x10GetCitiesRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12-\n" +
	"\x12include_statistics\x18\x03 \x01(\bR\x11includeStatistics\x12!\n" +
	"\fcountry_code\x18\x04 \x01(\tR\vcountryCode\x12!\n" +
	"\fpopular_only\x18\x05 \x01(\bR\vpopularOnly\"b\n" +
	"\x11GetCitiesResponse\x12,\n" +
	"\x06cities\x18\x01 \x03(\v2\x14.ai_poi.city.v1.CityR\x06cities\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x81\x01\n" +
	"\x0eGetCityRequest\x12\x17\n" +
	"\acity_id\x18\x01 \x01(\tR\x06cityId\x12-\n" +
	"\x12include_statistics\x18\x02 \x01(\bR\x11includeStatistics\x12'\n" +
	"\x0finclude_weather\x18\x03 \x01(\bR\x0eincludeWeather\"\xb2\x01\n" +
	"\x0fGetCityResponse\x12(\n" +
	"\x04city\x18\x01 \x01(\v2\x14.ai_poi.city.v1.CityR\x04city\x12>\n" +
	"\n" +
	"statistics\x18\x02 \x01(\v2\x1e.ai_poi.city.v1.CityStatisticsR\n" +
	"statistics\x125\n" +
	"\aweather\x18\x03 \x01(\v2\x1b.ai_poi.city.v1.WeatherInfoR\aweather\"\x9f\x01\n" +
	"\x13SearchCitiesRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\x12!\n" +
	"\ffuzzy_search\x18\x05 \x01(\bR\vfuzzySearch\"\xaf\x01\n" +
	"\x14SearchCitiesResponse\x12:\n" +
	"\aresults\x18\x01 \x03(\v2 .ai_poi.city.v1.CitySearchResultR\aresults\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12:\n" +
	"\bmetadata\x18\x03 \x01(\v2\x1e.ai_poi.city.v1.SearchMetadataR\bmetadata\"\x88\x01\n" +
	"\x10CitySearchResult\x12(\n" +
	"\x04city\x18\x01 \x01(\v2\x14.ai_poi.city.v1.CityR\x04city\x12'\n" +
	"\x0frelevance_score\x18\x02 \x01(\x01R\x0erelevanceScore\x12!\n" +
	"\fmatch_reason\x18\x03 \x01(\tR\vmatchReason\"\x89\x01\n" +
	"\x0eSearchMetadata\x12\"\n" +
	"\rquery_time_ms\x18\x01 \x01(\x01R\vqueryTimeMs\x12#\n" +
	"\rsearch_method\x18\x02 \x01(\tR\fsearchMethod\x12.\n" +
	"\x13fuzzy_matching_used\x18\x03 \x01(\bR\x11fuzzyMatchingUsed\"Z\n" +
	"\x18GetCityStatisticsRequest\x12\x17\n" +
	"\acity_id\x18\x01 \x01(\tR\x06cityId\x12%\n" +
	"\x0einclude_trends\x18\x02 \x01(\bR\rincludeTrends\"\x8e\x01\n" +
	"\x19GetCityStatisticsResponse\x12>\n" +
	"\n" +
	"statistics\x18\x01 \x01(\v2\x1e.ai_poi.city.v1.CityStatisticsR\n" +
	"statistics\x121\n" +
	"\x06trends\x18\x02 \x03(\v2\x19.ai_poi.city.v1.TrendDataR\x06trends\"w\n" +
	"\tTrendData\x12\x16\n" +
	"\x06metric\x18\x01 \x01(\tR\x06metric\x12:\n" +
	"\vdata_points\x18\x02 \x03(\v2\x19.ai_poi.city.v1.DataPointR\n" +
	"dataPoints\x12\x16\n" +
	"\x06period\x18\x03 \x01(\tR\x06period\"[\n" +
	"\tDataPoint\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x01R\x05value2\xf0\x02\n" +
	"\vCityService\x12P\n" +
	"\tGetCities\x12 .ai_poi.city.v1.GetCitiesRequest\x1a!.ai_poi.city.v1.GetCitiesResponse\x12J\n" +
	"\aGetCity\x12\x1e.ai_poi.city.v1.GetCityRequest\x1a\x1f.ai_poi.city.v1.GetCityResponse\x12Y\n" +
	"\fSearchCities\x12#.ai_poi.city.v1.SearchCitiesRequest\x1a$.ai_poi.city.v1.SearchCitiesResponse\x12h\n" +
	"\x11GetCityStatistics\x12(.ai_poi.city.v1.GetCityStatisticsRequest\x1a).ai_poi.city.v1.GetCityStatisticsResponseB0Z.github.com/FACorreiaa/loci-proto/proto/city/v1b\x06proto3"

var (
	file_city_proto_rawDescOnce sync.Once
	file_city_proto_rawDescData []byte
)

func file_city_proto_rawDescGZIP() []byte {
	file_city_proto_rawDescOnce.Do(func() {
		file_city_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_city_proto_rawDesc), len(file_city_proto_rawDesc)))
	})
	return file_city_proto_rawDescData
}

var file_city_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_city_proto_goTypes = []any{
	(*City)(nil),                      // 0: ai_poi.city.v1.City
	(*CityMetadata)(nil),              // 1: ai_poi.city.v1.CityMetadata
	(*CityStatistics)(nil),            // 2: ai_poi.city.v1.CityStatistics
	(*CategoryCount)(nil),             // 3: ai_poi.city.v1.CategoryCount
	(*WeatherInfo)(nil),               // 4: ai_poi.city.v1.WeatherInfo
	(*GetCitiesRequest)(nil),          // 5: ai_poi.city.v1.GetCitiesRequest
	(*GetCitiesResponse)(nil),         // 6: ai_poi.city.v1.GetCitiesResponse
	(*GetCityRequest)(nil),            // 7: ai_poi.city.v1.GetCityRequest
	(*GetCityResponse)(nil),           // 8: ai_poi.city.v1.GetCityResponse
	(*SearchCitiesRequest)(nil),       // 9: ai_poi.city.v1.SearchCitiesRequest
	(*SearchCitiesResponse)(nil),      // 10: ai_poi.city.v1.SearchCitiesResponse
	(*CitySearchResult)(nil),          // 11: ai_poi.city.v1.CitySearchResult
	(*SearchMetadata)(nil),            // 12: ai_poi.city.v1.SearchMetadata
	(*GetCityStatisticsRequest)(nil),  // 13: ai_poi.city.v1.GetCityStatisticsRequest
	(*GetCityStatisticsResponse)(nil), // 14: ai_poi.city.v1.GetCityStatisticsResponse
	(*TrendData)(nil),                 // 15: ai_poi.city.v1.TrendData
	(*DataPoint)(nil),                 // 16: ai_poi.city.v1.DataPoint
	(*timestamppb.Timestamp)(nil),     // 17: google.protobuf.Timestamp
}
var file_city_proto_depIdxs = []int32{
	1,  // 0: ai_poi.city.v1.City.metadata:type_name -> ai_poi.city.v1.CityMetadata
	17, // 1: ai_poi.city.v1.City.created_at:type_name -> google.protobuf.Timestamp
	17, // 2: ai_poi.city.v1.City.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 3: ai_poi.city.v1.CityStatistics.poi_by_category:type_name -> ai_poi.city.v1.CategoryCount
	17, // 4: ai_poi.city.v1.CityStatistics.last_updated:type_name -> google.protobuf.Timestamp
	17, // 5: ai_poi.city.v1.WeatherInfo.last_updated:type_name -> google.protobuf.Timestamp
	0,  // 6: ai_poi.city.v1.GetCitiesResponse.cities:type_name -> ai_poi.city.v1.City
	0,  // 7: ai_poi.city.v1.GetCityResponse.city:type_name -> ai_poi.city.v1.City
	2,  // 8: ai_poi.city.v1.GetCityResponse.statistics:type_name -> ai_poi.city.v1.CityStatistics
	4,  // 9: ai_poi.city.v1.GetCityResponse.weather:type_name -> ai_poi.city.v1.WeatherInfo
	11, // 10: ai_poi.city.v1.SearchCitiesResponse.results:type_name -> ai_poi.city.v1.CitySearchResult
	12, // 11: ai_poi.city.v1.SearchCitiesResponse.metadata:type_name -> ai_poi.city.v1.SearchMetadata
	0,  // 12: ai_poi.city.v1.CitySearchResult.city:type_name -> ai_poi.city.v1.City
	2,  // 13: ai_poi.city.v1.GetCityStatisticsResponse.statistics:type_name -> ai_poi.city.v1.CityStatistics
	15, // 14: ai_poi.city.v1.GetCityStatisticsResponse.trends:type_name -> ai_poi.city.v1.TrendData
	16, // 15: ai_poi.city.v1.TrendData.data_points:type_name -> ai_poi.city.v1.DataPoint
	17, // 16: ai_poi.city.v1.DataPoint.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 17: ai_poi.city.v1.CityService.GetCities:input_type -> ai_poi.city.v1.GetCitiesRequest
	7,  // 18: ai_poi.city.v1.CityService.GetCity:input_type -> ai_poi.city.v1.GetCityRequest
	9,  // 19: ai_poi.city.v1.CityService.SearchCities:input_type -> ai_poi.city.v1.SearchCitiesRequest
	13, // 20: ai_poi.city.v1.CityService.GetCityStatistics:input_type -> ai_poi.city.v1.GetCityStatisticsRequest
	6,  // 21: ai_poi.city.v1.CityService.GetCities:output_type -> ai_poi.city.v1.GetCitiesResponse
	8,  // 22: ai_poi.city.v1.CityService.GetCity:output_type -> ai_poi.city.v1.GetCityResponse
	10, // 23: ai_poi.city.v1.CityService.SearchCities:output_type -> ai_poi.city.v1.SearchCitiesResponse
	14, // 24: ai_poi.city.v1.CityService.GetCityStatistics:output_type -> ai_poi.city.v1.GetCityStatisticsResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_city_proto_init() }
func file_city_proto_init() {
	if File_city_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_city_proto_rawDesc), len(file_city_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_city_proto_goTypes,
		DependencyIndexes: file_city_proto_depIdxs,
		MessageInfos:      file_city_proto_msgTypes,
	}.Build()
	File_city_proto = out.File
	file_city_proto_goTypes = nil
	file_city_proto_depIdxs = nil
}
