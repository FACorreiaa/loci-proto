// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             v5.29.3
// source: profiles.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	ProfilesService_GetSearchProfiles_FullMethodName       = "/ai_poi.profiles.v1.ProfilesService/GetSearchProfiles"
	ProfilesService_GetSearchProfile_FullMethodName        = "/ai_poi.profiles.v1.ProfilesService/GetSearchProfile"
	ProfilesService_GetDefaultSearchProfile_FullMethodName = "/ai_poi.profiles.v1.ProfilesService/GetDefaultSearchProfile"
	ProfilesService_CreateSearchProfile_FullMethodName     = "/ai_poi.profiles.v1.ProfilesService/CreateSearchProfile"
	ProfilesService_UpdateSearchProfile_FullMethodName     = "/ai_poi.profiles.v1.ProfilesService/UpdateSearchProfile"
	ProfilesService_DeleteSearchProfile_FullMethodName     = "/ai_poi.profiles.v1.ProfilesService/DeleteSearchProfile"
	ProfilesService_SetDefaultSearchProfile_FullMethodName = "/ai_poi.profiles.v1.ProfilesService/SetDefaultSearchProfile"
)

// ProfilesServiceClient is the client API for ProfilesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
//
// ProfilesService provides user preference profile management
type ProfilesServiceClient interface {
	// Get all preference profiles for a user
	GetSearchProfiles(ctx context.Context, in *GetSearchProfilesRequest, opts ...grpc.CallOption) (*GetSearchProfilesResponse, error)
	// Get a specific preference profile
	GetSearchProfile(ctx context.Context, in *GetSearchProfileRequest, opts ...grpc.CallOption) (*GetSearchProfileResponse, error)
	// Get the default preference profile for a user
	GetDefaultSearchProfile(ctx context.Context, in *GetDefaultSearchProfileRequest, opts ...grpc.CallOption) (*GetDefaultSearchProfileResponse, error)
	// Create a new preference profile
	CreateSearchProfile(ctx context.Context, in *CreateSearchProfileRequest, opts ...grpc.CallOption) (*CreateSearchProfileResponse, error)
	// Update an existing preference profile
	UpdateSearchProfile(ctx context.Context, in *UpdateSearchProfileRequest, opts ...grpc.CallOption) (*UpdateSearchProfileResponse, error)
	// Delete a preference profile
	DeleteSearchProfile(ctx context.Context, in *DeleteSearchProfileRequest, opts ...grpc.CallOption) (*DeleteSearchProfileResponse, error)
	// Set a profile as the default
	SetDefaultSearchProfile(ctx context.Context, in *SetDefaultSearchProfileRequest, opts ...grpc.CallOption) (*SetDefaultSearchProfileResponse, error)
}

type profilesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewProfilesServiceClient(cc grpc.ClientConnInterface) ProfilesServiceClient {
	return &profilesServiceClient{cc}
}

func (c *profilesServiceClient) GetSearchProfiles(ctx context.Context, in *GetSearchProfilesRequest, opts ...grpc.CallOption) (*GetSearchProfilesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSearchProfilesResponse)
	err := c.cc.Invoke(ctx, ProfilesService_GetSearchProfiles_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) GetSearchProfile(ctx context.Context, in *GetSearchProfileRequest, opts ...grpc.CallOption) (*GetSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_GetSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) GetDefaultSearchProfile(ctx context.Context, in *GetDefaultSearchProfileRequest, opts ...grpc.CallOption) (*GetDefaultSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(GetDefaultSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_GetDefaultSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) CreateSearchProfile(ctx context.Context, in *CreateSearchProfileRequest, opts ...grpc.CallOption) (*CreateSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(CreateSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_CreateSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) UpdateSearchProfile(ctx context.Context, in *UpdateSearchProfileRequest, opts ...grpc.CallOption) (*UpdateSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(UpdateSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_UpdateSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) DeleteSearchProfile(ctx context.Context, in *DeleteSearchProfileRequest, opts ...grpc.CallOption) (*DeleteSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DeleteSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_DeleteSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *profilesServiceClient) SetDefaultSearchProfile(ctx context.Context, in *SetDefaultSearchProfileRequest, opts ...grpc.CallOption) (*SetDefaultSearchProfileResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(SetDefaultSearchProfileResponse)
	err := c.cc.Invoke(ctx, ProfilesService_SetDefaultSearchProfile_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ProfilesServiceServer is the server API for ProfilesService service.
// All implementations must embed UnimplementedProfilesServiceServer
// for forward compatibility.
//
// ProfilesService provides user preference profile management
type ProfilesServiceServer interface {
	// Get all preference profiles for a user
	GetSearchProfiles(context.Context, *GetSearchProfilesRequest) (*GetSearchProfilesResponse, error)
	// Get a specific preference profile
	GetSearchProfile(context.Context, *GetSearchProfileRequest) (*GetSearchProfileResponse, error)
	// Get the default preference profile for a user
	GetDefaultSearchProfile(context.Context, *GetDefaultSearchProfileRequest) (*GetDefaultSearchProfileResponse, error)
	// Create a new preference profile
	CreateSearchProfile(context.Context, *CreateSearchProfileRequest) (*CreateSearchProfileResponse, error)
	// Update an existing preference profile
	UpdateSearchProfile(context.Context, *UpdateSearchProfileRequest) (*UpdateSearchProfileResponse, error)
	// Delete a preference profile
	DeleteSearchProfile(context.Context, *DeleteSearchProfileRequest) (*DeleteSearchProfileResponse, error)
	// Set a profile as the default
	SetDefaultSearchProfile(context.Context, *SetDefaultSearchProfileRequest) (*SetDefaultSearchProfileResponse, error)
	mustEmbedUnimplementedProfilesServiceServer()
}

// UnimplementedProfilesServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedProfilesServiceServer struct{}

func (UnimplementedProfilesServiceServer) GetSearchProfiles(context.Context, *GetSearchProfilesRequest) (*GetSearchProfilesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchProfiles not implemented")
}
func (UnimplementedProfilesServiceServer) GetSearchProfile(context.Context, *GetSearchProfileRequest) (*GetSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) GetDefaultSearchProfile(context.Context, *GetDefaultSearchProfileRequest) (*GetDefaultSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDefaultSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) CreateSearchProfile(context.Context, *CreateSearchProfileRequest) (*CreateSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) UpdateSearchProfile(context.Context, *UpdateSearchProfileRequest) (*UpdateSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) DeleteSearchProfile(context.Context, *DeleteSearchProfileRequest) (*DeleteSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) SetDefaultSearchProfile(context.Context, *SetDefaultSearchProfileRequest) (*SetDefaultSearchProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultSearchProfile not implemented")
}
func (UnimplementedProfilesServiceServer) mustEmbedUnimplementedProfilesServiceServer() {}
func (UnimplementedProfilesServiceServer) testEmbeddedByValue()                         {}

// UnsafeProfilesServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to ProfilesServiceServer will
// result in compilation errors.
type UnsafeProfilesServiceServer interface {
	mustEmbedUnimplementedProfilesServiceServer()
}

func RegisterProfilesServiceServer(s grpc.ServiceRegistrar, srv ProfilesServiceServer) {
	// If the following call pancis, it indicates UnimplementedProfilesServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&ProfilesService_ServiceDesc, srv)
}

func _ProfilesService_GetSearchProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSearchProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).GetSearchProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_GetSearchProfiles_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).GetSearchProfiles(ctx, req.(*GetSearchProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_GetSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).GetSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_GetSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).GetSearchProfile(ctx, req.(*GetSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_GetDefaultSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDefaultSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).GetDefaultSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_GetDefaultSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).GetDefaultSearchProfile(ctx, req.(*GetDefaultSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_CreateSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).CreateSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_CreateSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).CreateSearchProfile(ctx, req.(*CreateSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_UpdateSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).UpdateSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_UpdateSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).UpdateSearchProfile(ctx, req.(*UpdateSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_DeleteSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).DeleteSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_DeleteSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).DeleteSearchProfile(ctx, req.(*DeleteSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProfilesService_SetDefaultSearchProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDefaultSearchProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProfilesServiceServer).SetDefaultSearchProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: ProfilesService_SetDefaultSearchProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProfilesServiceServer).SetDefaultSearchProfile(ctx, req.(*SetDefaultSearchProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// ProfilesService_ServiceDesc is the grpc.ServiceDesc for ProfilesService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var ProfilesService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "ai_poi.profiles.v1.ProfilesService",
	HandlerType: (*ProfilesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSearchProfiles",
			Handler:    _ProfilesService_GetSearchProfiles_Handler,
		},
		{
			MethodName: "GetSearchProfile",
			Handler:    _ProfilesService_GetSearchProfile_Handler,
		},
		{
			MethodName: "GetDefaultSearchProfile",
			Handler:    _ProfilesService_GetDefaultSearchProfile_Handler,
		},
		{
			MethodName: "CreateSearchProfile",
			Handler:    _ProfilesService_CreateSearchProfile_Handler,
		},
		{
			MethodName: "UpdateSearchProfile",
			Handler:    _ProfilesService_UpdateSearchProfile_Handler,
		},
		{
			MethodName: "DeleteSearchProfile",
			Handler:    _ProfilesService_DeleteSearchProfile_Handler,
		},
		{
			MethodName: "SetDefaultSearchProfile",
			Handler:    _ProfilesService_SetDefaultSearchProfile_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "profiles.proto",
}
