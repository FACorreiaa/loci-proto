// Note: This is a proto3 file, proto2 is deprecated and should not be used.
// In proto3, all fields are optional by default, required and optional keywords
// are no longer required. Everything is optional by default.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: customer.proto

// Declaring a package name prevents collisions with other packages that use
// methods with the same name.

package generated

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetCustomerReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Be explicit with what you want to get, don't just"ID"
	PublicId      string       `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
	Request       *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCustomerReq) Reset() {
	*x = GetCustomerReq{}
	mi := &file_customer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerReq) ProtoMessage() {}

func (x *GetCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerReq.ProtoReflect.Descriptor instead.
func (*GetCustomerReq) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{0}
}

func (x *GetCustomerReq) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *GetCustomerReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type GetCustomerRes struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // Optional: populate if success is false
	// The customer object
	Customer      *XCustomer    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Response      *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCustomerRes) Reset() {
	*x = GetCustomerRes{}
	mi := &file_customer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCustomerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCustomerRes) ProtoMessage() {}

func (x *GetCustomerRes) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCustomerRes.ProtoReflect.Descriptor instead.
func (*GetCustomerRes) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{1}
}

func (x *GetCustomerRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetCustomerRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetCustomerRes) GetCustomer() *XCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *GetCustomerRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type CreateCustomerReq struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The customer object
	Customer      *XCustomer   `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Request       *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCustomerReq) Reset() {
	*x = CreateCustomerReq{}
	mi := &file_customer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerReq) ProtoMessage() {}

func (x *CreateCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerReq.ProtoReflect.Descriptor instead.
func (*CreateCustomerReq) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCustomerReq) GetCustomer() *XCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *CreateCustomerReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type CreateCustomerRes struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The customer object
	Customer      *XCustomer    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Response      *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCustomerRes) Reset() {
	*x = CreateCustomerRes{}
	mi := &file_customer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCustomerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCustomerRes) ProtoMessage() {}

func (x *CreateCustomerRes) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCustomerRes.ProtoReflect.Descriptor instead.
func (*CreateCustomerRes) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCustomerRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateCustomerRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateCustomerRes) GetCustomer() *XCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *CreateCustomerRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type UpdateCustomerReq struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	CustomerId string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	// This saves us from having to return the entire customer object and saves
	// on implementation complexity due to not all customer fields being
	// returned (so we can't just dump the entire object into the DB).
	Updates       []*XDiff     `protobuf:"bytes,2,rep,name=updates,proto3" json:"updates,omitempty"`
	Request       *BaseRequest `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCustomerReq) Reset() {
	*x = UpdateCustomerReq{}
	mi := &file_customer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerReq) ProtoMessage() {}

func (x *UpdateCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerReq.ProtoReflect.Descriptor instead.
func (*UpdateCustomerReq) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCustomerReq) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *UpdateCustomerReq) GetUpdates() []*XDiff {
	if x != nil {
		return x.Updates
	}
	return nil
}

func (x *UpdateCustomerReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type UpdateCustomerRes struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// The customer object
	Customer      *XCustomer    `protobuf:"bytes,3,opt,name=customer,proto3" json:"customer,omitempty"`
	Response      *BaseResponse `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCustomerRes) Reset() {
	*x = UpdateCustomerRes{}
	mi := &file_customer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCustomerRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCustomerRes) ProtoMessage() {}

func (x *UpdateCustomerRes) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCustomerRes.ProtoReflect.Descriptor instead.
func (*UpdateCustomerRes) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCustomerRes) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateCustomerRes) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateCustomerRes) GetCustomer() *XCustomer {
	if x != nil {
		return x.Customer
	}
	return nil
}

func (x *UpdateCustomerRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

type DeleteCustomerReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CustomerId    string                 `protobuf:"bytes,1,opt,name=customer_id,json=customerId,proto3" json:"customer_id,omitempty"`
	HardDelete    bool                   `protobuf:"varint,2,opt,name=hard_delete,json=hardDelete,proto3" json:"hard_delete,omitempty"` // soft delete by default
	Request       *BaseRequest           `protobuf:"bytes,100,opt,name=request,proto3" json:"request,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCustomerReq) Reset() {
	*x = DeleteCustomerReq{}
	mi := &file_customer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCustomerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCustomerReq) ProtoMessage() {}

func (x *DeleteCustomerReq) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCustomerReq.ProtoReflect.Descriptor instead.
func (*DeleteCustomerReq) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCustomerReq) GetCustomerId() string {
	if x != nil {
		return x.CustomerId
	}
	return ""
}

func (x *DeleteCustomerReq) GetHardDelete() bool {
	if x != nil {
		return x.HardDelete
	}
	return false
}

func (x *DeleteCustomerReq) GetRequest() *BaseRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

// NilRes effectively mirrors google.protobuf.Empty, we use our own type though
// as the google.protobuf.Empty type is not available in all languages that we
// support.
type NilRes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *BaseResponse          `protobuf:"bytes,100,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NilRes) Reset() {
	*x = NilRes{}
	mi := &file_customer_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NilRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NilRes) ProtoMessage() {}

func (x *NilRes) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NilRes.ProtoReflect.Descriptor instead.
func (*NilRes) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{7}
}

func (x *NilRes) GetResponse() *BaseResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

// -- Subtype messages
type XCustomer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicId      string                 `protobuf:"bytes,1,opt,name=public_id,json=publicId,proto3" json:"public_id,omitempty"`
	PrivateId     string                 `protobuf:"bytes,2,opt,name=private_id,json=privateId,proto3" json:"private_id,omitempty"`
	Name          *XName                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email         string                 `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Phone         string                 `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"` // Optional - string due to intl dial code
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XCustomer) Reset() {
	*x = XCustomer{}
	mi := &file_customer_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XCustomer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XCustomer) ProtoMessage() {}

func (x *XCustomer) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XCustomer.ProtoReflect.Descriptor instead.
func (*XCustomer) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{8}
}

func (x *XCustomer) GetPublicId() string {
	if x != nil {
		return x.PublicId
	}
	return ""
}

func (x *XCustomer) GetPrivateId() string {
	if x != nil {
		return x.PrivateId
	}
	return ""
}

func (x *XCustomer) GetName() *XName {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *XCustomer) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *XCustomer) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type XName struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Title should be an enum but we'll keep it simple for now
	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	First    string `protobuf:"bytes,2,opt,name=first,proto3" json:"first,omitempty"`
	Middle   string `protobuf:"bytes,3,opt,name=middle,proto3" json:"middle,omitempty"`
	Last     string `protobuf:"bytes,4,opt,name=last,proto3" json:"last,omitempty"`
	Suffix   string `protobuf:"bytes,5,opt,name=suffix,proto3" json:"suffix,omitempty"`
	Nickname string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	// title + first + middle + last + suffix
	Full string `protobuf:"bytes,7,opt,name=full,proto3" json:"full,omitempty"`
	// first + last
	Friendly      string `protobuf:"bytes,8,opt,name=friendly,proto3" json:"friendly,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XName) Reset() {
	*x = XName{}
	mi := &file_customer_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XName) ProtoMessage() {}

func (x *XName) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XName.ProtoReflect.Descriptor instead.
func (*XName) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{9}
}

func (x *XName) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *XName) GetFirst() string {
	if x != nil {
		return x.First
	}
	return ""
}

func (x *XName) GetMiddle() string {
	if x != nil {
		return x.Middle
	}
	return ""
}

func (x *XName) GetLast() string {
	if x != nil {
		return x.Last
	}
	return ""
}

func (x *XName) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *XName) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *XName) GetFull() string {
	if x != nil {
		return x.Full
	}
	return ""
}

func (x *XName) GetFriendly() string {
	if x != nil {
		return x.Friendly
	}
	return ""
}

// While the value may not be a string, for diff patching, we wrap everything in
// a string.
type XDiff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Field         string                 `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	OldValue      string                 `protobuf:"bytes,2,opt,name=old_value,json=oldValue,proto3" json:"old_value,omitempty"`
	NewValue      string                 `protobuf:"bytes,3,opt,name=new_value,json=newValue,proto3" json:"new_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XDiff) Reset() {
	*x = XDiff{}
	mi := &file_customer_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XDiff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XDiff) ProtoMessage() {}

func (x *XDiff) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XDiff.ProtoReflect.Descriptor instead.
func (*XDiff) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{10}
}

func (x *XDiff) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *XDiff) GetOldValue() string {
	if x != nil {
		return x.OldValue
	}
	return ""
}

func (x *XDiff) GetNewValue() string {
	if x != nil {
		return x.NewValue
	}
	return ""
}

type BaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Downstream    string                 `protobuf:"bytes,998,opt,name=downstream,proto3" json:"downstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseRequest) Reset() {
	*x = BaseRequest{}
	mi := &file_customer_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseRequest) ProtoMessage() {}

func (x *BaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseRequest.ProtoReflect.Descriptor instead.
func (*BaseRequest) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{11}
}

func (x *BaseRequest) GetDownstream() string {
	if x != nil {
		return x.Downstream
	}
	return ""
}

func (x *BaseRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type BaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Upstream      string                 `protobuf:"bytes,998,opt,name=upstream,proto3" json:"upstream,omitempty"`
	RequestId     string                 `protobuf:"bytes,999,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Status        string                 `protobuf:"bytes,1000,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BaseResponse) Reset() {
	*x = BaseResponse{}
	mi := &file_customer_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseResponse) ProtoMessage() {}

func (x *BaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_customer_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseResponse.ProtoReflect.Descriptor instead.
func (*BaseResponse) Descriptor() ([]byte, []int) {
	return file_customer_proto_rawDescGZIP(), []int{12}
}

func (x *BaseResponse) GetUpstream() string {
	if x != nil {
		return x.Upstream
	}
	return ""
}

func (x *BaseResponse) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *BaseResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_customer_proto protoreflect.FileDescriptor

const file_customer_proto_rawDesc = "" +
	"\n" +
	"\x0ecustomer.proto\x12\x17highlyregarded.customer\"m\n" +
	"\x0eGetCustomerReq\x12\x1b\n" +
	"\tpublic_id\x18\x01 \x01(\tR\bpublicId\x12>\n" +
	"\arequest\x18d \x01(\v2$.highlyregarded.customer.BaseRequestR\arequest\"\xc7\x01\n" +
	"\x0eGetCustomerRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12>\n" +
	"\bcustomer\x18\x03 \x01(\v2\".highlyregarded.customer.XCustomerR\bcustomer\x12A\n" +
	"\bresponse\x18d \x01(\v2%.highlyregarded.customer.BaseResponseR\bresponse\"\x93\x01\n" +
	"\x11CreateCustomerReq\x12>\n" +
	"\bcustomer\x18\x01 \x01(\v2\".highlyregarded.customer.XCustomerR\bcustomer\x12>\n" +
	"\arequest\x18d \x01(\v2$.highlyregarded.customer.BaseRequestR\arequest\"\xca\x01\n" +
	"\x11CreateCustomerRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12>\n" +
	"\bcustomer\x18\x03 \x01(\v2\".highlyregarded.customer.XCustomerR\bcustomer\x12A\n" +
	"\bresponse\x18d \x01(\v2%.highlyregarded.customer.BaseResponseR\bresponse\"\xae\x01\n" +
	"\x11UpdateCustomerReq\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x128\n" +
	"\aupdates\x18\x02 \x03(\v2\x1e.highlyregarded.customer.XDiffR\aupdates\x12>\n" +
	"\arequest\x18d \x01(\v2$.highlyregarded.customer.BaseRequestR\arequest\"\xca\x01\n" +
	"\x11UpdateCustomerRes\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12>\n" +
	"\bcustomer\x18\x03 \x01(\v2\".highlyregarded.customer.XCustomerR\bcustomer\x12A\n" +
	"\bresponse\x18d \x01(\v2%.highlyregarded.customer.BaseResponseR\bresponse\"\x95\x01\n" +
	"\x11DeleteCustomerReq\x12\x1f\n" +
	"\vcustomer_id\x18\x01 \x01(\tR\n" +
	"customerId\x12\x1f\n" +
	"\vhard_delete\x18\x02 \x01(\bR\n" +
	"hardDelete\x12>\n" +
	"\arequest\x18d \x01(\v2$.highlyregarded.customer.BaseRequestR\arequest\"K\n" +
	"\x06NilRes\x12A\n" +
	"\bresponse\x18d \x01(\v2%.highlyregarded.customer.BaseResponseR\bresponse\"\xa7\x01\n" +
	"\tXCustomer\x12\x1b\n" +
	"\tpublic_id\x18\x01 \x01(\tR\bpublicId\x12\x1d\n" +
	"\n" +
	"private_id\x18\x02 \x01(\tR\tprivateId\x122\n" +
	"\x04name\x18\x03 \x01(\v2\x1e.highlyregarded.customer.XNameR\x04name\x12\x14\n" +
	"\x05email\x18\x04 \x01(\tR\x05email\x12\x14\n" +
	"\x05phone\x18\x05 \x01(\tR\x05phone\"\xc3\x01\n" +
	"\x05XName\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x14\n" +
	"\x05first\x18\x02 \x01(\tR\x05first\x12\x16\n" +
	"\x06middle\x18\x03 \x01(\tR\x06middle\x12\x12\n" +
	"\x04last\x18\x04 \x01(\tR\x04last\x12\x16\n" +
	"\x06suffix\x18\x05 \x01(\tR\x06suffix\x12\x1a\n" +
	"\bnickname\x18\x06 \x01(\tR\bnickname\x12\x12\n" +
	"\x04full\x18\a \x01(\tR\x04full\x12\x1a\n" +
	"\bfriendly\x18\b \x01(\tR\bfriendly\"W\n" +
	"\x05XDiff\x12\x14\n" +
	"\x05field\x18\x01 \x01(\tR\x05field\x12\x1b\n" +
	"\told_value\x18\x02 \x01(\tR\boldValue\x12\x1b\n" +
	"\tnew_value\x18\x03 \x01(\tR\bnewValue\"N\n" +
	"\vBaseRequest\x12\x1f\n" +
	"\n" +
	"downstream\x18\xe6\a \x01(\tR\n" +
	"downstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\"d\n" +
	"\fBaseResponse\x12\x1b\n" +
	"\bupstream\x18\xe6\a \x01(\tR\bupstream\x12\x1e\n" +
	"\n" +
	"request_id\x18\xe7\a \x01(\tR\trequestId\x12\x17\n" +
	"\x06status\x18\xe8\a \x01(\tR\x06status2\x9e\x03\n" +
	"\bCustomer\x12_\n" +
	"\vGetCustomer\x12'.highlyregarded.customer.GetCustomerReq\x1a'.highlyregarded.customer.GetCustomerRes\x12h\n" +
	"\x0eCreateCustomer\x12*.highlyregarded.customer.CreateCustomerReq\x1a*.highlyregarded.customer.CreateCustomerRes\x12h\n" +
	"\x0eUpdateCustomer\x12*.highlyregarded.customer.UpdateCustomerReq\x1a*.highlyregarded.customer.UpdateCustomerRes\x12]\n" +
	"\x0eDeleteCustomer\x12*.highlyregarded.customer.DeleteCustomerReq\x1a\x1f.highlyregarded.customer.NilResb\x06proto3"

var (
	file_customer_proto_rawDescOnce sync.Once
	file_customer_proto_rawDescData []byte
)

func file_customer_proto_rawDescGZIP() []byte {
	file_customer_proto_rawDescOnce.Do(func() {
		file_customer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_customer_proto_rawDesc), len(file_customer_proto_rawDesc)))
	})
	return file_customer_proto_rawDescData
}

var file_customer_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_customer_proto_goTypes = []any{
	(*GetCustomerReq)(nil),    // 0: highlyregarded.customer.GetCustomerReq
	(*GetCustomerRes)(nil),    // 1: highlyregarded.customer.GetCustomerRes
	(*CreateCustomerReq)(nil), // 2: highlyregarded.customer.CreateCustomerReq
	(*CreateCustomerRes)(nil), // 3: highlyregarded.customer.CreateCustomerRes
	(*UpdateCustomerReq)(nil), // 4: highlyregarded.customer.UpdateCustomerReq
	(*UpdateCustomerRes)(nil), // 5: highlyregarded.customer.UpdateCustomerRes
	(*DeleteCustomerReq)(nil), // 6: highlyregarded.customer.DeleteCustomerReq
	(*NilRes)(nil),            // 7: highlyregarded.customer.NilRes
	(*XCustomer)(nil),         // 8: highlyregarded.customer.XCustomer
	(*XName)(nil),             // 9: highlyregarded.customer.XName
	(*XDiff)(nil),             // 10: highlyregarded.customer.XDiff
	(*BaseRequest)(nil),       // 11: highlyregarded.customer.BaseRequest
	(*BaseResponse)(nil),      // 12: highlyregarded.customer.BaseResponse
}
var file_customer_proto_depIdxs = []int32{
	11, // 0: highlyregarded.customer.GetCustomerReq.request:type_name -> highlyregarded.customer.BaseRequest
	8,  // 1: highlyregarded.customer.GetCustomerRes.customer:type_name -> highlyregarded.customer.XCustomer
	12, // 2: highlyregarded.customer.GetCustomerRes.response:type_name -> highlyregarded.customer.BaseResponse
	8,  // 3: highlyregarded.customer.CreateCustomerReq.customer:type_name -> highlyregarded.customer.XCustomer
	11, // 4: highlyregarded.customer.CreateCustomerReq.request:type_name -> highlyregarded.customer.BaseRequest
	8,  // 5: highlyregarded.customer.CreateCustomerRes.customer:type_name -> highlyregarded.customer.XCustomer
	12, // 6: highlyregarded.customer.CreateCustomerRes.response:type_name -> highlyregarded.customer.BaseResponse
	10, // 7: highlyregarded.customer.UpdateCustomerReq.updates:type_name -> highlyregarded.customer.XDiff
	11, // 8: highlyregarded.customer.UpdateCustomerReq.request:type_name -> highlyregarded.customer.BaseRequest
	8,  // 9: highlyregarded.customer.UpdateCustomerRes.customer:type_name -> highlyregarded.customer.XCustomer
	12, // 10: highlyregarded.customer.UpdateCustomerRes.response:type_name -> highlyregarded.customer.BaseResponse
	11, // 11: highlyregarded.customer.DeleteCustomerReq.request:type_name -> highlyregarded.customer.BaseRequest
	12, // 12: highlyregarded.customer.NilRes.response:type_name -> highlyregarded.customer.BaseResponse
	9,  // 13: highlyregarded.customer.XCustomer.name:type_name -> highlyregarded.customer.XName
	0,  // 14: highlyregarded.customer.Customer.GetCustomer:input_type -> highlyregarded.customer.GetCustomerReq
	2,  // 15: highlyregarded.customer.Customer.CreateCustomer:input_type -> highlyregarded.customer.CreateCustomerReq
	4,  // 16: highlyregarded.customer.Customer.UpdateCustomer:input_type -> highlyregarded.customer.UpdateCustomerReq
	6,  // 17: highlyregarded.customer.Customer.DeleteCustomer:input_type -> highlyregarded.customer.DeleteCustomerReq
	1,  // 18: highlyregarded.customer.Customer.GetCustomer:output_type -> highlyregarded.customer.GetCustomerRes
	3,  // 19: highlyregarded.customer.Customer.CreateCustomer:output_type -> highlyregarded.customer.CreateCustomerRes
	5,  // 20: highlyregarded.customer.Customer.UpdateCustomer:output_type -> highlyregarded.customer.UpdateCustomerRes
	7,  // 21: highlyregarded.customer.Customer.DeleteCustomer:output_type -> highlyregarded.customer.NilRes
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_customer_proto_init() }
func file_customer_proto_init() {
	if File_customer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_customer_proto_rawDesc), len(file_customer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_customer_proto_goTypes,
		DependencyIndexes: file_customer_proto_depIdxs,
		MessageInfos:      file_customer_proto_msgTypes,
	}.Build()
	File_customer_proto = out.File
	file_customer_proto_goTypes = nil
	file_customer_proto_depIdxs = nil
}
